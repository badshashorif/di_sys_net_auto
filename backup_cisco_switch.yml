---
- name: Backup Cisco switch configuration (SSH)
  hosts: CORE_SW
  gather_facts: no
  connection: ansible.netcommon.network_cli

  # Set these in inventory/group_vars/host_vars ideally; shown here for clarity
  vars:
    backup_root: "/root/network/backups"
    # ansible_user: "{{ vault_user }}"         # recommended to store in Ansible Vault
    # ansible_password: "{{ vault_password }}" # recommended to store in Ansible Vault
    # ansible_network_os: "cisco.nxos.nxos"    # or "cisco.ios.ios" per device
    # ansible_ssh_port: 22

  pre_tasks:
    - name: Build per-host backup dir locally
      ansible.builtin.file:
        path: "{{ backup_root }}/{{ inventory_hostname }}"
        state: directory
        mode: "0750"
      delegate_to: localhost
      run_once: false

    - name: Make timestamp
      ansible.builtin.set_fact:
        ts: "{{ lookup('pipe', 'date +%Y%m%d-%H%M%S') }}"

  tasks:
    - name: Disable paging
      ansible.netcommon.cli_command:
        command: "terminal length 0"

    - name: Collect 'show interface description'
      ansible.netcommon.cli_command:
        command: "show interface description"
      register: sid

    - name: Collect 'show running-config'
      ansible.netcommon.cli_command:
        command: "show running-config"
      register: srun

    - name: Stitch outputs together
      ansible.builtin.set_fact:
        backup_blob: |
          ===== Device: {{ inventory_hostname }} =====
          Time: {{ ts }}
          Network OS: {{ ansible_network_os | default('N/A') }}

          ----- show interface description -----
          {{ sid.stdout | default('') }}

          ----- show running-config -----
          {{ srun.stdout | default('') }}

    - name: Save backup locally
      ansible.builtin.copy:
        content: "{{ backup_blob }}"
        dest: "{{ backup_root }}/{{ inventory_hostname }}/{{ inventory_hostname }}_backup_{{ ts }}.txt"
        mode: "0640"
      delegate_to: localhost
