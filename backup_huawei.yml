---
- hosts: HUAWEI
  gather_facts: no
  vars:
    backup_dir: "/root/network/backups/HUAWEI"
  tasks:

    - name: Ensure backup directory exists
      ansible.builtin.file:
        path: "{{ backup_dir }}"
        state: directory
        mode: '0755'
      delegate_to: localhost

    - name: Set ssh port (set default 22 port when port is not defined)
      set_fact:
        ansible_port: "{{ ansible_port | default(22) }}"

    - name: Run backup with password (when password is defined)
      when: ansible_ssh_pass is defined
      block:

      - name: Ensure that sshpass is installed
        ansible.builtin.shell: whereis sshpass | awk '{print $2}'
        run_once: yes
        register: sshpass
        delegate_to: localhost

      - ansible.builtin.fail:
          msg: >-
            Playbook requires sshpass to use password authentication. Please install
            sshpass and re-run the same playbook. 
            See https://www.redhat.com/sysadmin/ssh-automation-sshpass for details.
        when: sshpass.stdout|length == 0

      - name: Gather configuration (with password authentication)
        ansible.builtin.shell: >-
          sshpass -p '{{ ansible_ssh_pass }}' ssh -o ConnectTimeout=60 -o StrictHostKeyChecking=no {{ ansible_user }}@{{ inventory_hostname }} -p {{ ansible_port }} "system-view; screen-width 512; return; display current-configuration"
        register: export
        delegate_to: localhost

      - name: Store configuration to local file
        ansible.builtin.copy:
          content: "{{ export.stdout }}"
          dest: "{{ backup_dir }}/{{ inventory_hostname }}_config_{{ lookup('pipe', 'date +%Y-%m-%d@%H:%M:%S') }}.txt"
        when: export is defined
        delegate_to: localhost

    - name: Run backup without password (when password is not defined)
      when: ansible_ssh_pass is not defined
      block:

      - name: Gather configuration (with passwordless authentication)
        ansible.builtin.shell: >-
          ssh {{ ansible_user }}@{{ inventory_hostname }} -p {{ ansible_port }} "display current-configuration"
        register: export
        delegate_to: localhost

      - name: Store configuration to local file
        ansible.builtin.copy:
          content: "{{ export.stdout }}"
          dest: "{{ backup_dir }}/{{ inventory_hostname }}_config_{{ lookup('pipe', 'date +%Y-%m-%d@%H:%M:%S') }}.txt"
        when: export is defined
        delegate_to: localhost
