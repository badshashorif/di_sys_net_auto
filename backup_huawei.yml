---
# BACKUP HUAWEI SWITCHES - Optimized Playbook
# This playbook creates a directory for backups and saves Huawei switch configurations.

# Task to create a directory for backups
- name: Collect date and create backup directory
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Collect today's date
      set_fact:
        DTG: "{{ lookup('pipe', 'date +%Y-%m-%d') }}"

    - name: Pass DTG to all hosts
      add_host:
        name: "{{ item }}"
        groups: HUAWEI_SW
        DTG: "{{ DTG }}"
      with_items: "{{ groups['HUAWEI_SW'] }}"

    - name: Create directory for backups
      file:
        path: "/root/network/backups/HUAWEI/bkp_{{ DTG }}/Switches/"
        state: directory
  run_once: true

# Task to back up Huawei switch configurations
- name: Backup Huawei configuration via CLI
  hosts: HUAWEI_SW
  gather_facts: false
  tasks:
    - name: Execute display configuration command
      ansible.netcommon.cli_command:
        command: display current-configuration
      register: config_output

    - name: Save configuration to file
      copy:
        content: "{{ config_output.stdout }}"
        dest: "/root/network/backups/HUAWEI/bkp_{{ hostvars['localhost']['DTG'] }}/Switches/{{ inventory_hostname }}.cfg"

# Additional steps for environments requiring password authentication
- name: Ensure sshpass for password-based SSH
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Check if sshpass is installed
      ansible.builtin.shell: whereis sshpass | awk '{print $2}'
      register: sshpass_check
      delegate_to: localhost
      run_once: true

    - name: Fail if sshpass is not installed
      ansible.builtin.fail:
        msg: >-
          sshpass is required for password-based authentication. Please install sshpass
          and re-run the playbook. See details at https://www.redhat.com/sysadmin/ssh-automation-sshpass
      when: sshpass_check.stdout | length == 0

- name: Add host to known_hosts
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Add host key for Huawei switch
      known_hosts:
        path: "~/.ssh/known_hosts"
        name: "10.91.91.57"
        port: 9337
        key: "{{ lookup('pipe', 'ssh-keyscan -p 9337 10.91.91.57') }}"

