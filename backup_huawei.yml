---
- name: Backup Huawei Switch Configuration
  hosts: HUAWEI_SW
  gather_facts: no
  vars:
    backup_dir: "/root/network/backups/HUAWEI"

  tasks:
    - name: Ensure sshpass is installed (only for password-based authentication)
      shell: which sshpass
      register: sshpass_check
      delegate_to: localhost
      ignore_errors: yes
      run_once: true

    - name: Fail if sshpass is not installed
      fail:
        msg: >
          sshpass is required for password-based SSH authentication.
          Please install sshpass on the Semaphore host.
      when: sshpass_check.stdout == ""

    - name: Collect configuration using SSH
      block:
        - name: Execute display current configuration command
          shell: >
            sshpass -p '{{ ansible_ssh_pass }}'
            ssh -o StrictHostKeyChecking=no -p {{ ansible_port }}
            {{ ansible_user }}@{{ inventory_hostname }}
            "display current-configuration"
          register: config_output
          delegate_to: localhost

        - name: Save configuration to backup directory
          copy:
            content: "{{ config_output.stdout }}"
            dest: "{{ backup_dir }}/{{ inventory_hostname }}_config_{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M-%S') }}.cfg"
          delegate_to: localhost
      when: ansible_ssh_pass is defined

    - name: Collect configuration (passwordless authentication)
      block:
        - name: Execute display current configuration command
          shell: >
            ssh -o StrictHostKeyChecking=no -p {{ ansible_port }}
            {{ ansible_user }}@{{ inventory_hostname }}
            "display current-configuration"
          register: config_output
          delegate_to: localhost

        - name: Save configuration to backup directory
          copy:
            content: "{{ config_output.stdout }}"
            dest: "{{ backup_dir }}/{{ inventory_hostname }}_config_{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M-%S') }}.cfg"
          delegate_to: localhost
      when: ansible_ssh_pass is not defined
